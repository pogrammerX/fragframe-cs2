<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>